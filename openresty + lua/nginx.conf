# 使用lua读取文件返回时，lua进程nobody用户没有权限，设置用户为admin当前用户。
user admin;
worker_processes  1;
error_log logs/error.log warn;
events {
    worker_connections 1024;
}
http {
    resolver 8.8.8.8;
    lua_package_path '/export/serveres/nginx/nginx/lua/?.lua;$prefix/nginx/lua/?.lua;;';
    lua_package_cpath '/usr/local/lib/?.so;/export/serveres/nginx/lualib/?.so;/export/serveres/nginx/luajit/lib/?.so;'; 
    upstream mybackend {
        server 172.28.175.135;
    }

    server {
        listen 80;
        # server_name diviner.jd.local;

        location / {
            # proxy_pass http://diviner.jd.local;
            
            location /len {
                header_filter_by_lua_block { ngx.header.content_length = nil }
                body_filter_by_lua 'ngx.arg[1] = string.len(ngx.arg[1]) .. "\\n"';
            }

            #location ~ [a-z]*\/[a-z]*=[0-9]*$ {
                # proxy_pass http://diviner.jd.local;
                #header_filter_by_lua_block { ngx.header.content_length = nil }
                #body_filter_by_lua 'ngx.arg[1] = "this is diviner/?p=* in ip/diviner" .. "\\n"';
            #}
            
            location /lemp {
                header_filter_by_lua_block { ngx.header.content_length = nil }
                body_filter_by_lua 'ngx.arg[1] = "this is temp script in localhost" .. "\\n"';
            }

        }
        
        location ^~ /prefix {
            proxy_pass http://diviner.jd.local;
            header_filter_by_lua_block { ngx.header.content_length = nil }
            body_filter_by_lua 'ngx.arg[1] = "this is prefix in location" .. "\\n"';
        }

        location /diviner {
            # 设置server.lua 的结果为proxy_server，根据参数更换下游proxy_pass的值，转向jd后端或者本地或者其他后端
            set_by_lua_file $proxy_server /home/admin/lixiaomei/conf/server.lua;
            proxy_pass $proxy_server;
            # header_filter_by_lua_block { ngx.header.content_length = nil }
            # 返回数据json替换
            # body_filter_by_lua_file /export/serveres/nginx/nginx/lua/replace.lua;
            # read_file.lua 读取文件，并更换响应体数据
            # body_filter_by_lua_file /home/admin/lixiaomei/conf/read_file.lua;
            
        }

    }
    server {
        listen 9090;
        location /diviner {
            header_filter_by_lua_block { ngx.header.content_length = nil }
            body_filter_by_lua 'ngx.arg[1] = "this is diviner/?p=* in ip/diviner localhost, port 9090" .. "\\n"';
        }
    }
}
